/* src/app/globals.css */

/* On charge les utilitaires de Tailwind */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* On définit nos variables pour les utiliser sur des éléments spécifiques (boutons, textes, etc.) */
:root {
    --color-neon-pink: #f000ff;
    --color-neon-cyan: #00f6ff;
    --color-text-primary: #f5f5f5;
    --color-text-secondary: #a8a29e;
    --color-border-dark: #1a5c3a;
    --color-background: #0a0a0a;
    --color-accent: #ff6b35;
}

/* Et ici, on donne l'ordre DIRECTEMENT au navigateur */
body {
  background-color: var(--color-background);
  color: var(--color-text-primary);
  font-family: 'Courier New', monospace;
}

.crt-effect::before,
.crt-effect::after {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  pointer-events: none; /* Les effets ne doivent pas être cliquables */
  z-index: 2;
}

/* Couche 1 : Grille et Glitch */
.crt-effect::before {
  /* On crée une grille subtile avec des dégradés */
  background: 
    linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%), 
    linear-gradient(90deg, rgba(255, 0, 0, 0.06), rgba(0, 255, 0, 0.02), rgba(0, 0, 255, 0.06));
  background-size: 100% 2px, 3px 100%;
  /* On applique l'animation de glitch définie dans Tailwind */
  animation: glitch 1.5s linear infinite alternate-reverse;
  opacity: 0.1; /* On rend l'effet très subtil */
}

/* Couche 2 : Scanlines */
.crt-effect::after {
  background: repeating-linear-gradient(
    to bottom,
    transparent 0,
    rgba(0, 0, 0, 0.5) 1px,
    transparent 2px
  );
  animation: scanline 10s linear infinite;
  opacity: 0.5;
}

/* Animations pour l'effet CRT */
@keyframes glitch {
  0% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  100% {
    transform: translate(0);
  }
}

@keyframes scanline {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(100vh);
  }
}

/* Assurez-vous que l'effet CRT est visible */
.crt-effect {
  position: relative;
  overflow: hidden;
}

/* Glitch au survol - exemple pour un bouton */
.glitch-on-hover:hover {
  animation: glitch 0.2s infinite;
}

/* Animation de glitch plus prononcée pour les boutons */
.glitch-on-hover:hover {
  animation: buttonGlitch 0.5s;
  position: relative;
}

@keyframes buttonGlitch {
  0% {
    transform: translate(0);
    text-shadow: 0 0 5px currentColor;
  }
  20% {
    transform: translate(-3px, 1px);
    text-shadow: 2px 0 0 #ff0000, -2px 0 0 #00ff00;
  }
  40% {
    transform: translate(3px, -1px);
    text-shadow: -2px 0 0 #ff0000, 2px 0 0 #00ff00;
  }
  60% {
    transform: translate(-3px, -1px);
    text-shadow: 2px 0 0 #ff0000, -2px 0 0 #00ff00;
  }
  80% {
    transform: translate(3px, 1px);
    text-shadow: -2px 0 0 #ff0000, 2px 0 0 #00ff00;
  }
  100% {
    transform: translate(0);
    text-shadow: 0 0 5px currentColor;
  }
}

/* Styles pour les transitions de page avec glitch */
.glitch-transition {
  position: relative;
  overflow: hidden;
}

.glitch-transition::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    45deg,
    transparent 0%,
    rgba(255, 0, 255, 0.1) 25%,
    transparent 50%,
    rgba(0, 255, 255, 0.1) 75%,
    transparent 100%
  );
  pointer-events: none;
  z-index: 1000;
  opacity: 0;
  animation: glitchScan 0.3s ease-in-out;
}

@keyframes glitchScan {
  0% {
    opacity: 0;
    transform: translateX(-100%);
  }
  50% {
    opacity: 1;
    transform: translateX(0%);
  }
  100% {
    opacity: 0;
    transform: translateX(100%);
  }
}

/* Effet de distorsion pendant les transitions */
.glitch-transition.transitioning {
  animation: glitchDistortion 0.3s ease-in-out;
}

@keyframes glitchDistortion {
  0% {
    transform: scale(1) skew(0deg);
  }
  25% {
    transform: scale(1.02) skew(-1deg);
  }
  50% {
    transform: scale(0.98) skew(1deg);
  }
  75% {
    transform: scale(1.01) skew(-0.5deg);
  }
  100% {
    transform: scale(1) skew(0deg);
  }
}

/* Animation pour les scanlines de transition */
@keyframes scanlines {
  0% {
    opacity: 0;
    transform: translateY(-100%);
  }
  50% {
    opacity: 1;
    transform: translateY(0%);
  }
  100% {
    opacity: 0;
    transform: translateY(100%);
  }
}

/* Animation pour la barre de progression du loading */
@keyframes progressBar {
  0% {
    width: 0%;
    opacity: 1;
  }
  50% {
    width: 100%;
    opacity: 0.8;
  }
  100% {
    width: 0%;
    opacity: 1;
  }
}

/* Effet de glitch sur les boutons */
.glitch-button {
  position: relative;
  overflow: hidden;
}

.glitch-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.glitch-button:hover::before {
  left: 100%;
}

/* Animation de typewriter */
.typewriter {
  overflow: hidden;
  border-right: 2px solid var(--color-neon-cyan);
  white-space: nowrap;
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: var(--color-neon-cyan); }
}

/* Classe pour tronquer le texte */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}