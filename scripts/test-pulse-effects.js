#!/usr/bin/env node

/**
 * Script de test pour v√©rifier les effets de pulsation des marqueurs
 * Usage: node scripts/test-pulse-effects.js
 */

import fs from 'fs';
import path from 'path';

function testPulseEffects() {
  console.log('üß™ Test des effets de pulsation des marqueurs\n');

  // V√©rifier les modifications du CSS
  const cssPath = path.join(process.cwd(), 'src', 'app', 'map', 'CityMap.module.css');
  
  if (fs.existsSync(cssPath)) {
    const content = fs.readFileSync(cssPath, 'utf8');
    
    // V√©rifier les nouvelles animations
    if (content.includes('@keyframes pulse')) {
      console.log('‚úÖ Animation pulse principale trouv√©e');
    } else {
      console.error('‚ùå Animation pulse principale manquante');
    }
    
    if (content.includes('@keyframes pulseRing1')) {
      console.log('‚úÖ Animation pulseRing1 trouv√©e');
    } else {
      console.error('‚ùå Animation pulseRing1 manquante');
    }
    
    if (content.includes('@keyframes pulseRing2')) {
      console.log('‚úÖ Animation pulseRing2 trouv√©e');
    } else {
      console.error('‚ùå Animation pulseRing2 manquante');
    }
    
    // V√©rifier les classes de pulsation
    if (content.includes('.pulse-1 .pulseRing')) {
      console.log('‚úÖ Classes de pulsation avec anneaux trouv√©es');
    } else {
      console.error('‚ùå Classes de pulsation avec anneaux manquantes');
    }
    
    // V√©rifier le nouveau style pulseRing2
    if (content.includes('.pulseRing2')) {
      console.log('‚úÖ Style pulseRing2 trouv√©');
    } else {
      console.error('‚ùå Style pulseRing2 manquant');
    }
  } else {
    console.error('‚ùå Fichier CityMap.module.css non trouv√©');
  }

  // V√©rifier les modifications du composant
  const markerPath = path.join(process.cwd(), 'src', 'app', 'map', 'ContractMarker.js');
  
  if (fs.existsSync(markerPath)) {
    const content = fs.readFileSync(markerPath, 'utf8');
    
    if (content.includes('pulseRing2')) {
      console.log('‚úÖ Deuxi√®me anneau de pulsation ajout√© au composant');
    } else {
      console.error('‚ùå Deuxi√®me anneau de pulsation manquant');
    }
    
    if (content.includes('boxShadow: `0 0 20px 4px ${difficultyColor}')) {
      console.log('‚úÖ Effet de glow am√©lior√©');
    } else {
      console.error('‚ùå Effet de glow non am√©lior√©');
    }
    
    if (content.includes('zIndex: 3')) {
      console.log('‚úÖ Z-index du marqueur principal ajust√©');
    } else {
      console.error('‚ùå Z-index du marqueur principal non ajust√©');
    }
  } else {
    console.error('‚ùå Fichier ContractMarker.js non trouv√©');
  }

  console.log('\nüìã R√©sum√© des am√©liorations de pulsation :');
  console.log('   ‚Ä¢ Animation principale : scale(1.2) avec glow');
  console.log('   ‚Ä¢ Premier anneau : scale(1.4) √† (1.8)');
  console.log('   ‚Ä¢ Deuxi√®me anneau : scale(1.2) √† (2.0)');
  console.log('   ‚Ä¢ Effet de glow : 3 niveaux de shadow');
  console.log('   ‚Ä¢ Vitesses : 0.5s √† 2s selon la difficult√©');
  console.log('   ‚Ä¢ Z-index : 3 niveaux pour la profondeur');

  console.log('\nüéØ Effets visuels attendus :');
  console.log('   ‚Ä¢ Marqueur principal : pulsation avec glow color√©');
  console.log('   ‚Ä¢ Anneau 1 : expansion et fade-out');
  console.log('   ‚Ä¢ Anneau 2 : expansion plus large');
  console.log('   ‚Ä¢ Couleurs : adapt√©es au niveau de difficult√©');
  console.log('   ‚Ä¢ Vitesse : plus rapide = plus difficile');

  console.log('\nüéâ Test termin√© !');
}

// Ex√©cuter le test
testPulseEffects(); 